version: '3'
services:
  mongo:
    build: ./mongodb
    restart: always
    ports:
      - '27017:27017'
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
      MONGO_REPLICA_HOST: mongo
      MONGO_REPLICA_PORT: 27017
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/${MONGO_INITDB_DATABASE} --quiet
      interval: 5s
      timeout: 10s
      retries: 5
    networks:
      - indexer_network
    volumes:
      - ./mongodb/data:/data/db

  indexer:
    build:
      context: .
      dockerfile: ./apps/indexer/Dockerfile
    environment:
      DATABASE_URL: mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongo:${MONGO_REPLICA_PORT}/${MONGO_INITDB_DATABASE}?authSource=admin&directConnection=true
      RPC_ENDPOINT_URL: ${RPC_ENDPOINT_URL}
    networks:
      - indexer_network
    depends_on:
      mongo:
        condition: service_healthy

  api:
    build:
      context: .
      dockerfile: ./apps/api/Dockerfile
    environment:
      DATABASE_URL: mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongo:${MONGO_REPLICA_PORT}/${MONGO_INITDB_DATABASE}?authSource=admin&directConnection=true
    ports:
      - '3000:3000'
    networks:
      - indexer_network
    depends_on:
      mongo:
        condition: service_healthy

volumes:
  mongodb_data:
  indexer_data:

networks:
  indexer_network:
    driver: bridge
